
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// add your models below

model User {
  id            String    @id @map("_id")
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]
  role       String?
  banned     Boolean?  @default(false)
  banReason  String?
  banExpires DateTime?

  // app fields
  tokens        Int      @default(0)
  tokenTransactions TokenTransaction[]
  termsAccepted TermsAccepted

  @@unique([email])
  @@map("user")
}

type TermsAccepted {
    timestamp DateTime  @default(now())
    version   String    @default("")
}

model TokenTransaction {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    type      TokenTransactionType
    tokens    Int
    stripeSessionId String?
    createdAt DateTime @default(now())

    @@unique([stripeSessionId])
    @@map("token_transaction")
}

enum TokenTransactionType {
    PURCHASE
    CONSUME
}

model Session {
  id        String   @id @map("_id")
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  impersonatedBy String?

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id @map("_id")
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id @map("_id")
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
